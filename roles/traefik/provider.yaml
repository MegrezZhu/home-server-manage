# http routing section
http:
  routers:
    traefik:
      entrypoints:
        - websecure
      rule: "Host(`traefik.{{ vault_domain }}`)"
      service: api@internal
      middlewares:
        - ip-whitelist-lan-only
        - basic-auth
      tls:
        certResolver: my-resolver
    traefik-http:
      entrypoints:
        - web
      rule: "Host(`traefik.{{ vault_domain }}`)"
      service: api@internal
      middlewares:
        - redirect-to-https

    lanraragi:
      entrypoints:
        - websecure
      rule: "Host(`lanraragi.{{ vault_domain }}`)"
      service: lanraragi
      middlewares:
        - ip-whitelist-lan-only
      tls:
        certResolver: my-resolver
    lanraragi-http:
      entrypoints:
        - web
      rule: "Host(`lanraragi.{{ vault_domain }}`)"
      service: lanraragi
      middlewares:
        - redirect-to-https

    navidrome:
      entrypoints:
        - websecure
      rule: "Host(`navidrome.{{ vault_domain }}`)"
      service: navidrome
      tls:
        certResolver: my-resolver
    navidrome-http:
      entrypoints:
        - web
      rule: "Host(`navidrome.{{ vault_domain }}`)"
      service: navidrome
      middlewares:
        - redirect-to-https

    lrcapi:
      entrypoints:
        - websecure
      # Apis of lrcapi:
      # - Lyric: http://navidrome.{{ vault_domain }}/__/lrcapi/api/v1/lyrics/single
      # - Cover (new): http://navidrome.{{ vault_domain }}/__/lrcapi/api/v1/cover/music
      # - Cover (old, seems compatible with MusicStream): http://navidrome.{{ vault_domain }}/__/lrcapi/cover
      rule: "Host(`navidrome.{{ vault_domain }}`) && PathPrefix(`/__/lrcapi`)"
      service: lrcapi
      middlewares:
        # This service does not have good builtin auth, so we add this layer.
        - basic-auth
        - lrcapi-strip-prefix
      tls:
        certResolver: my-resolver
    lrcapi-http:
      entrypoints:
        - web
      rule: "Host(`navidrome.{{ vault_domain }}`) && PathPrefix(`/__/lrcapi`)"
      service: lrcapi
      middlewares:
        - redirect-to-https

    unlock-music:
      entrypoints:
        - websecure
      rule: "Host(`unlock-music.{{ vault_domain }}`)"
      service: unlock-music
      tls:
        certResolver: my-resolver
      middlewares:
        - basic-auth
    unlock-music-http:
      entrypoints:
        - web
      rule: "Host(`unlock-music.{{ vault_domain }}`)"
      service: unlock-music
      middlewares:
        - redirect-to-https

    pihole:
      entrypoints:
        - websecure
      rule: "Host(`pi.hole.{{ vault_domain }}`)"
      service: pihole
      tls:
        certResolver: my-resolver
    pihole-http:
      entrypoints:
        - web
      rule: "Host(`pi.hole.{{ vault_domain }}`)"
      service: pihole
      middlewares:
        - redirect-to-https

  middlewares:
    basic-auth:
      basicAuth:
        users:
          - "{{ vault_traefik.basic_auth_user }}"
        removeHeader: true
    ip-whitelist-lan-only:
      ipWhiteList:
        sourceRange:
          - "10.0.0.0/24"
    lrcapi-strip-prefix:
      stripPrefix:
        prefixes:
          - "/__/lrcapi"
        forceSlash: true
    redirect-to-https:
      redirectScheme:
        scheme: "https"
        permanent: true

  services:
    lanraragi:
      loadBalancer:
        servers:
        - url: http://lanraragi:3000/
    navidrome:
      loadBalancer:
        servers:
        - url: http://navidrome:4533/
    lrcapi:
      loadBalancer:
        servers:
        - url: http://lrcapi:28883/
    pihole:
      loadBalancer:
        servers:
        - url: "http://pihole:80/"
    unlock-music: 
      loadBalancer:
        servers:
        - url: http://unlock_music:8080/
